package com.orlovandrei.ecosystem.util;

import com.orlovandrei.ecosystem.annotation.Utility;
import lombok.AllArgsConstructor;
import lombok.Getter;

@Utility
@Getter
@AllArgsConstructor
public enum Messages {
    WELCOME_MESSAGE("Welcome to the ecosystem simulator!"),
    ADD_PLANT("Add a new plant"),
    ADD_ANIMAL("Add a new animal"),
    CHOOSE_AN_OPERATION("Choose an operation"),
    EXIT_PROGRAM("Exit the program"),
    EXIT_TO_MAIN_MENU("Exit to main menu"),
    UPDATE_ANIMAL_DIET("Update animal diet"),
    DELETE_SPECIES("Delete species"),
    INTERACTION_BETWEEN_SPECIES("Interaction between species"),
    INCORRECT_SELECTION("Incorrect selection. Please try again."),
    ECOSYSTEM_CREATE("The ecosystem has been created."),
    ECOSYSTEM_LOADED("The ecosystem is loaded."),
    MENU("Main Menu"),
    CREATE_NEW_ECOSYSTEM("Create new ecosystem"),
    LOAD_EXISTING_ECOSYSTEM("Load existing ecosystem"),
    ENTER_NEW_ECOSYSTEM_NAME("Enter the name of the new ecosystem"),
    ENTER_EXISTING_ECOSYSTEM_NAME("Enter the name of the existing ecosystem"),
    MANAGING_ECOSYSTEM("Managing ecosystem"),
    ENTER_PLANT_NAME("Enter the name of the plant"),
    ENTER_ANIMAL_NAME("Enter the name of the animal"),
    ENTER_DIET_TYPE("Enter the type of diet (herbivore/carnivore/omnivore)"),
    ENTER_ANIMAL_TO_REMOVE("Enter the name of the animal to be removed"),
    ENTER_PLANT_TO_REMOVE("Enter the name of the plant to be removed"),
    ENTER_NEW_DIET("Enter a new type of diet (herbivore/carnivore/omnivore)"),
    ENTER_ANIMAL_NAME_TO_UPDATE("Enter the name of the animal to change the diet"),
    ENTER_PREDATOR_NAME("Enter the name of the predator"),
    ENTER_PREY_NAME("Enter the name of the prey"),
    ENTER_TEMPERATURE("Enter the temperature for the ecosystem"),
    ENTER_HUMIDITY("Enter the humidity for the ecosystem"),
    ENTER_AVAILABLE_WATER("Enter the amount of available water for the ecosystem"),
    DELETE_WHAT("Delete what?"),
    PLANT("Plant"),
    ANIMAL("Animal"),
    ERROR_CREATING_ECOSYSTEM("Error in creating an ecosystem"),
    ERROR_CREATING_FILE("Error creating file"),
    PLANTS_IN_THE_ECOSYSTEM("Plants in the ecosystem"),
    ANIMALS_IN_THE_ECOSYSTEM("Animals in the ecosystem"),
    ERROR_WHILE_READING_A_FILE("Error while reading a file"),
    ERROR_WHEN_RECORDING_PARAMETERS("Error when recording ecosystem parameters"),
    ADDED_TO_ECOSYSTEM("added to ecosystem"),
    ERROR_ADDING_SPECIES("Error adding species"),
    SPECIE("Specie"),
    REMOVED_FROM_THE_ECOSYSTEM("removed from the ecosystem"),
    ERROR_WHEN_DELETING_A_SPECIE("Error when deleting a specie"),
    ANIMAL_DIET("Animal diet"),
    UPDATED_TO("updated to"),
    ERROR_UPDATING_ANIMAL_DIET("Error updating animal's diet"),
    ERROR_CHECKING_ANIMAL_DIET("Error checking animal diet"),
    ERROR_WHEN_CHECKING_A_PLANT("Error when checking plant"),
    TEMPERATURE("Temperature"),
    HUMIDITY("Humidity"),
    AVAILABLE_WATER("Available water"),
    INTERACTION_RECORDED("Interaction recorded "),
    ERROR_RECORDING_INTERACTION("Error recording interaction"),
    INTERACTION_IS_NOT_POSSIBLE("Interaction is not possible"),
    PREDATOR("Predator"),
    ATE_A_HERBIVORE("ate a herbivore"),
    ATE_A_PLANT("ate a plant"),
    ATE("ate"),
    HERBIVORE("Herbivore"),
    CANT_EAT("can't eat"),
    POPULATION("population"),
    FAILED_TO_LOAD_OR_CREATE_ECOSYSTEM("Failed to load or create ecosystem. Returning to main menu"),
    THIS_ECOSYSTEM_ALREADY_EXISTS("This ecosystem already exists. Please choose a different name"),
    INCORRECT_NAME("Incorrect name. Please enter letters only"),
    INCORRECT_TYPE_OF_DIET("Incorrect type of diet. Please enter herbivore, carnivore or omnivore"),
    UNABLE_TO_FIND_PROPERTIES("Unable to find application.properties"),
    RESOURCE_DIRECTORY_IS_NOT_SET("Resource directory property is not set in application.properties"),
    PREDICTION("Prediction"),
    OMNIVORE("Omnivore");

    private final String message;
}

